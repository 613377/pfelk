{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"(Kea) DHCP - IP/MAC Flow","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"(Kea) DHCP - IP/MAC Flow\",\"type\":\"vega\",\"aggs\":[],\"params\":{\"spec\":\"{\\n  $schema: https://vega.github.io/schema/vega/v3.0.json\\n  data: [\\n    {\\n      // query ES based on the currently selected time range and filter string\\n      name: rawData\\n      url: {\\n        %context%: true\\n        %timefield%: @timestamp\\n        index: *-pfelk-kea-dhcp*\\n        body: {\\n          size: 0\\n          aggs: {\\n            table: {\\n              composite: {\\n                size: 10000\\n                sources: [\\n                  {\\n                    stk1: {\\n                      terms: {field: \\\"kea.dhcp.client.ip\\\"}\\n                    }\\n                  }\\n                  {\\n                    stk2: {\\n                      terms: {field: \\\"kea.dhcp.client.mac\\\"}\\n                    }\\n                  }\\n                ]\\n              }\\n            }\\n          }\\n        }\\n      }\\n      // From the result, take just the data we are interested in\\n      format: {property: \\\"aggregations.table.buckets\\\"}\\n      // Convert key.stk1 -> stk1 for simpler access below\\n      transform: [\\n        {type: \\\"formula\\\", expr: \\\"datum.key.stk1\\\", as: \\\"stk1\\\"}\\n        {type: \\\"formula\\\", expr: \\\"datum.key.stk2\\\", as: \\\"stk2\\\"}\\n        {type: \\\"formula\\\", expr: \\\"datum.doc_count\\\", as: \\\"size\\\"}\\n      ]\\n    }\\n    {\\n      name: nodes\\n      source: rawData\\n      transform: [\\n        // when a country is selected, filter out unrelated data\\n        {\\n          type: filter\\n          expr: !groupSelector || groupSelector.stk1 == datum.stk1 || groupSelector.stk2 == datum.stk2\\n        }\\n        // Set new key for later lookups - identifies each node\\n        {type: \\\"formula\\\", expr: \\\"datum.stk1+datum.stk2\\\", as: \\\"key\\\"}\\n        // instead of each table row, create two new rows,\\n        // one for the source (stack=stk1) and one for destination node (stack=stk2).\\n        // The country code stored in stk1 and stk2 fields is placed into grpId field.\\n        {\\n          type: fold\\n          fields: [\\\"stk1\\\", \\\"stk2\\\"]\\n          as: [\\\"stack\\\", \\\"grpId\\\"]\\n        }\\n        // Create a sortkey, different for stk1 and stk2 stacks.\\n        // Space separator ensures proper sort order in some corner cases.\\n        {\\n          type: formula\\n          expr: datum.stack == 'stk1' ? datum.stk1+' '+datum.stk2 : datum.stk2+' '+datum.stk1\\n          as: sortField\\n        }\\n        // Calculate y0 and y1 positions for stacking nodes one on top of the other,\\n        // independently for each stack, and ensuring they are in the proper order,\\n        // alphabetical from the top (reversed on the y axis)\\n        {\\n          type: stack\\n          groupby: [\\\"stack\\\"]\\n          sort: {field: \\\"sortField\\\", order: \\\"descending\\\"}\\n          field: size\\n        }\\n        // calculate vertical center point for each node, used to draw edges\\n        {type: \\\"formula\\\", expr: \\\"(datum.y0+datum.y1)/2\\\", as: \\\"yc\\\"}\\n      ]\\n    }\\n    {\\n      name: groups\\n      source: nodes\\n      transform: [\\n        // combine all nodes into country groups, summing up the doc counts\\n        {\\n          type: aggregate\\n          groupby: [\\\"stack\\\", \\\"grpId\\\"]\\n          fields: [\\\"size\\\"]\\n          ops: [\\\"sum\\\"]\\n          as: [\\\"total\\\"]\\n        }\\n        // re-calculate the stacking y0,y1 values\\n        {\\n          type: stack\\n          groupby: [\\\"stack\\\"]\\n          sort: {field: \\\"grpId\\\", order: \\\"descending\\\"}\\n          field: total\\n        }\\n        // project y0 and y1 values to screen coordinates\\n        // doing it once here instead of doing it several times in marks\\n        {type: \\\"formula\\\", expr: \\\"scale('y', datum.y0)\\\", as: \\\"scaledY0\\\"}\\n        {type: \\\"formula\\\", expr: \\\"scale('y', datum.y1)\\\", as: \\\"scaledY1\\\"}\\n        // boolean flag if the label should be on the right of the stack\\n        {type: \\\"formula\\\", expr: \\\"datum.stack == 'stk1'\\\", as: \\\"rightLabel\\\"}\\n        // Calculate traffic percentage for this country using \\\"y\\\" scale\\n        // domain upper bound, which represents the total traffic\\n        {\\n          type: formula\\n          expr: datum.total/domain('y')[1]\\n          as: percentage\\n        }\\n      ]\\n    }\\n    {\\n      // This is a temp lookup table with all the 'stk2' stack nodes\\n      name: destinationNodes\\n      source: nodes\\n      transform: [\\n        {type: \\\"filter\\\", expr: \\\"datum.stack == 'stk2'\\\"}\\n      ]\\n    }\\n    {\\n      name: edges\\n      source: nodes\\n      transform: [\\n        // we only want nodes from the left stack\\n        {type: \\\"filter\\\", expr: \\\"datum.stack == 'stk1'\\\"}\\n        // find corresponding node from the right stack, keep it as \\\"target\\\"\\n        {\\n          type: lookup\\n          from: destinationNodes\\n          key: key\\n          fields: [\\\"key\\\"]\\n          as: [\\\"target\\\"]\\n        }\\n        // calculate SVG link path between stk1 and stk2 stacks for the node pair\\n        {\\n          type: linkpath\\n          orient: horizontal\\n          shape: diagonal\\n          sourceY: {expr: \\\"scale('y', datum.yc)\\\"}\\n          sourceX: {expr: \\\"scale('x', 'stk1') + bandwidth('x')\\\"}\\n          targetY: {expr: \\\"scale('y', datum.target.yc)\\\"}\\n          targetX: {expr: \\\"scale('x', 'stk2')\\\"}\\n        }\\n        // A little trick to calculate the thickness of the line.\\n        // The value needs to be the same as the hight of the node, but scaling\\n        // size to screen's height gives inversed value because screen's Y\\n        // coordinate goes from the top to the bottom, whereas the graph's Y=0\\n        // is at the bottom. So subtracting scaled doc count from screen height\\n        // (which is the \\\"lower\\\" bound of the \\\"y\\\" scale) gives us the right value\\n        {\\n          type: formula\\n          expr: range('y')[0]-scale('y', datum.size)\\n          as: strokeWidth\\n        }\\n        // Tooltip needs individual link's percentage of all traffic\\n        {\\n          type: formula\\n          expr: datum.size/domain('y')[1]\\n          as: percentage\\n        }\\n      ]\\n    }\\n  ]\\n  scales: [\\n    {\\n      // calculates horizontal stack positioning\\n      name: x\\n      type: band\\n      range: width\\n      domain: [\\\"stk1\\\", \\\"stk2\\\"]\\n      paddingOuter: 0.05\\n      paddingInner: 0.95\\n    }\\n    {\\n      // this scale goes up as high as the highest y1 value of all nodes\\n      name: y\\n      type: linear\\n      range: height\\n      domain: {data: \\\"nodes\\\", field: \\\"y1\\\"}\\n    }\\n    {\\n      // use rawData to ensure the colors stay the same when clicking.\\n      name: color\\n      type: ordinal\\n      range: category\\n      domain: {data: \\\"rawData\\\", fields: [\\\"stk1\\\", \\\"stk2\\\"]}\\n    }\\n    {\\n      // this scale is used to map internal ids (stk1, stk2) to stack names\\n      name: stackNames\\n      type: ordinal\\n      range: [\\\"Source\\\", \\\"Destination\\\"]\\n      domain: [\\\"stk1\\\", \\\"stk2\\\"]\\n    }\\n  ]\\n  axes: [\\n    {\\n      // x axis should use custom label formatting to print proper stack names\\n      orient: bottom\\n      scale: x\\n      encode: {\\n        labels: {\\n          update: {\\n            text: {scale: \\\"stackNames\\\", field: \\\"value\\\"}\\n          }\\n        }\\n      }\\n    }\\n    {orient: \\\"left\\\", scale: \\\"y\\\"}\\n  ]\\n  marks: [\\n    {\\n      // draw the connecting line between stacks\\n      type: path\\n      name: edgeMark\\n      from: {data: \\\"edges\\\"}\\n      // this prevents some autosizing issues with large strokeWidth for paths\\n      clip: true\\n      encode: {\\n        update: {\\n          // By default use color of the left node, except when showing traffic\\n          // from just one country, in which case use destination color.\\n          stroke: [\\n            {\\n              test: groupSelector && groupSelector.stack=='stk1'\\n              scale: color\\n              field: stk2\\n            }\\n            {scale: \\\"color\\\", field: \\\"stk1\\\"}\\n          ]\\n          strokeWidth: {field: \\\"strokeWidth\\\"}\\n          path: {field: \\\"path\\\"}\\n          // when showing all traffic, and hovering over a country,\\n          // highlight the traffic from that country.\\n          strokeOpacity: {\\n            signal: !groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 0.9 : 0.3\\n          }\\n          // Ensure that the hover-selected edges show on top\\n          zindex: {\\n            signal: !groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 1 : 0\\n          }\\n          // format tooltip string\\n          tooltip: {\\n            signal: datum.stk1 + ' â†’ ' + datum.stk2 + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\\n          }\\n        }\\n        // Simple mouseover highlighting of a single line\\n        hover: {\\n          strokeOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      // draw stack groups (countries)\\n      type: rect\\n      name: groupMark\\n      from: {data: \\\"groups\\\"}\\n      encode: {\\n        enter: {\\n          fill: {scale: \\\"color\\\", field: \\\"grpId\\\"}\\n          width: {scale: \\\"x\\\", band: 1}\\n        }\\n        update: {\\n          x: {scale: \\\"x\\\", field: \\\"stack\\\"}\\n          y: {field: \\\"scaledY0\\\"}\\n          y2: {field: \\\"scaledY1\\\"}\\n          fillOpacity: {value: 0.6}\\n          tooltip: {\\n            signal: datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\\n          }\\n        }\\n        hover: {\\n          fillOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      // draw country code labels on the inner side of the stack\\n      type: text\\n      from: {data: \\\"groups\\\"}\\n      // don't process events for the labels - otherwise line mouseover is unclean\\n      interactive: false\\n      encode: {\\n        update: {\\n          // depending on which stack it is, position x with some padding\\n          x: {\\n            signal: scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)\\n          }\\n          // middle of the group\\n          yc: {signal: \\\"(datum.scaledY0 + datum.scaledY1)/2\\\"}\\n          align: {signal: \\\"datum.rightLabel ? 'left' : 'right'\\\"}\\n          baseline: {value: \\\"middle\\\"}\\n          fontWeight: {value: \\\"bold\\\"}\\n          // only show text label if the group's height is large enough\\n          text: {signal: \\\"abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''\\\"}\\n        }\\n      }\\n    }\\n    {\\n      // Create a \\\"show all\\\" button. Shown only when a country is selected.\\n      type: group\\n      data: [\\n        // We need to make the button show only when groupSelector signal is true.\\n        // Each mark is drawn as many times as there are elements in the backing data.\\n        // Which means that if values list is empty, it will not be drawn.\\n        // Here I create a data source with one empty object, and filter that list\\n        // based on the signal value. This can only be done in a group.\\n        {\\n          name: dataForShowAll\\n          values: [{}]\\n          transform: [{type: \\\"filter\\\", expr: \\\"groupSelector\\\"}]\\n        }\\n      ]\\n      // Set button size and positioning\\n      encode: {\\n        enter: {\\n          xc: {signal: \\\"width/2\\\"}\\n          y: {value: 30}\\n          width: {value: 80}\\n          height: {value: 30}\\n        }\\n      }\\n      marks: [\\n        {\\n          // This group is shown as a button with rounded corners.\\n          type: group\\n          // mark name allows signal capturing\\n          name: groupReset\\n          // Only shows button if dataForShowAll has values.\\n          from: {data: \\\"dataForShowAll\\\"}\\n          encode: {\\n            enter: {\\n              cornerRadius: {value: 6}\\n              fill: {value: \\\"#f5f5f5\\\"}\\n              stroke: {value: \\\"#c1c1c1\\\"}\\n              strokeWidth: {value: 2}\\n              // use parent group's size\\n              height: {\\n                field: {group: \\\"height\\\"}\\n              }\\n              width: {\\n                field: {group: \\\"width\\\"}\\n              }\\n            }\\n            update: {\\n              // groups are transparent by default\\n              opacity: {value: 1}\\n            }\\n            hover: {\\n              opacity: {value: 0.7}\\n            }\\n          }\\n          marks: [\\n            {\\n              type: text\\n              // if true, it will prevent clicking on the button when over text.\\n              interactive: false\\n              encode: {\\n                enter: {\\n                  // center text in the paren group\\n                  xc: {\\n                    field: {group: \\\"width\\\"}\\n                    mult: 0.5\\n                  }\\n                  yc: {\\n                    field: {group: \\\"height\\\"}\\n                    mult: 0.5\\n                    offset: 2\\n                  }\\n                  align: {value: \\\"center\\\"}\\n                  baseline: {value: \\\"middle\\\"}\\n                  fontWeight: {value: \\\"bold\\\"}\\n                  text: {value: \\\"Show All\\\"}\\n                }\\n              }\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n  signals: [\\n    {\\n      // used to highlight traffic to/from the same country\\n      name: groupHover\\n      value: {}\\n      on: [\\n        {\\n          events: @groupMark:mouseover\\n          update: \\\"{stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\\\"\\n        }\\n        {events: \\\"mouseout\\\", update: \\\"{}\\\"}\\n      ]\\n    }\\n    // used to filter only the data related to the selected country\\n    {\\n      name: groupSelector\\n      value: false\\n      on: [\\n        {\\n          // Clicking groupMark sets this signal to the filter values\\n          events: @groupMark:click!\\n          update: \\\"{stack:datum.stack, stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\\\"\\n        }\\n        {\\n          // Clicking \\\"show all\\\" button, or double-clicking anywhere resets it\\n          events: [\\n            {type: \\\"click\\\", markname: \\\"groupReset\\\"}\\n            {type: \\\"dblclick\\\"}\\n          ]\\n          update: \\\"false\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\"}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:29:10.785Z","id":"ca2754c8-f09d-4cdc-852c-a312a5e966bb","managed":false,"references":[],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-04-28T15:29:10.785Z","version":"WzIzOCw1XQ=="}
{"attributes":{"allowHidden":false,"fieldAttrs":"{}","fieldFormatMap":"{}","fields":"[]","name":"*-pfelk-kea-dhcp*","runtimeFieldMap":"{}","sourceFilters":"[]","timeFieldName":"@timestamp","title":"*-pfelk-kea-dhcp*"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-07T15:59:14.925Z","id":"228cd476-22c9-4685-8cab-7d2bbef90967","managed":false,"references":[],"type":"index-pattern","typeMigrationVersion":"8.0.0","updated_at":"2024-04-28T15:27:36.014Z","version":"WzIyNiw1XQ=="}
{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"(Kea) DHCP - Observer Selector","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"(Kea) DHCP - Observer Selector\",\"type\":\"input_control_vis\",\"aggs\":[],\"params\":{\"controls\":[{\"id\":\"1607572918084\",\"fieldName\":\"log.syslog.hostname\",\"parent\":\"\",\"label\":\"\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"dynamicOptions\":true,\"size\":5,\"order\":\"desc\"},\"indexPatternRefName\":\"control_0_index_pattern\"}],\"updateFiltersOnChange\":false,\"useTimeFilter\":false,\"pinFilters\":false}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:31:53.867Z","id":"5e3b704b-8895-4eef-8cdb-393cc5488910","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"control_0_index_pattern","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-04-28T15:31:53.867Z","version":"WzI0NCw1XQ=="}
{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"(Kea) DHCP - Interface","uiStateJSON":"{\"vis\":{\"legendOpen\":true}}","version":1,"visState":"{\"title\":\"(Kea) DHCP - Interface\",\"type\":\"pie\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{\"emptyAsNull\":false},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"log.syslog.hostname\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":5,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\",\"includeIsRegex\":true,\"excludeIsRegex\":true},\"schema\":\"segment\"}],\"params\":{\"type\":\"pie\",\"addTooltip\":true,\"legendPosition\":\"right\",\"isDonut\":true,\"labels\":{\"show\":false,\"values\":true,\"last_level\":true,\"truncate\":100},\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"},\"distinctColors\":true,\"nestedLegend\":false,\"truncateLegend\":true,\"maxLegendLines\":1,\"legendDisplay\":\"show\",\"legendSize\":\"auto\",\"emptySizeRatio\":0.3}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:32:42.887Z","id":"74b564fb-fc4a-4d52-b9ee-985845364c06","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-04-28T15:32:42.887Z","version":"WzI0Nyw1XQ=="}
{"attributes":{"description":"","state":{"adHocDataViews":{},"datasourceStates":{"formBased":{"layers":{"bab892f9-fc84-4c5a-b819-92f8825732c9":{"columnOrder":["778bdf38-2d96-4ee6-972a-00970fd77126","fd819d47-b55c-4172-908a-19b7197dacf7","de069508-e2dd-46f3-abf7-213b32c4517a"],"columns":{"778bdf38-2d96-4ee6-972a-00970fd77126":{"customLabel":true,"dataType":"date","isBucketed":true,"label":"@timestamp","operationType":"date_histogram","params":{"dropPartials":false,"includeEmptyRows":false,"interval":"auto"},"scale":"interval","sourceField":"@timestamp"},"de069508-e2dd-46f3-abf7-213b32c4517a":{"customLabel":true,"dataType":"number","isBucketed":false,"label":"Count","operationType":"count","params":{"emptyAsNull":true},"scale":"ratio","sourceField":"___records___"},"fd819d47-b55c-4172-908a-19b7197dacf7":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"kea.dhcp.operation: Descending","operationType":"terms","params":{"exclude":[],"excludeIsRegex":false,"include":[],"includeIsRegex":false,"missingBucket":false,"orderBy":{"columnId":"de069508-e2dd-46f3-abf7-213b32c4517a","type":"column"},"orderDirection":"desc","otherBucket":false,"parentFormat":{"id":"terms"},"size":5},"scale":"ordinal","sourceField":"kea.dhcp.operation"}},"ignoreGlobalFilters":false,"incompleteColumns":{}}}},"indexpattern":{"layers":{}},"textBased":{"layers":{}}},"filters":[],"internalReferences":[],"query":{"language":"kuery","query":""},"visualization":{"axisTitlesVisibilitySettings":{"x":true,"yLeft":true,"yRight":true},"curveType":"LINEAR","gridlinesVisibilitySettings":{"x":false,"yLeft":false,"yRight":true},"labelsOrientation":{"x":0,"yLeft":0,"yRight":-90},"layers":[{"accessors":["de069508-e2dd-46f3-abf7-213b32c4517a"],"isHistogram":true,"layerId":"bab892f9-fc84-4c5a-b819-92f8825732c9","layerType":"data","palette":{"name":"kibana_palette","type":"palette"},"seriesType":"bar_stacked","simpleView":false,"splitAccessor":"fd819d47-b55c-4172-908a-19b7197dacf7","xAccessor":"778bdf38-2d96-4ee6-972a-00970fd77126","xScaleType":"time","yConfig":[{"axisMode":"left","forAccessor":"de069508-e2dd-46f3-abf7-213b32c4517a"}]}],"legend":{"isVisible":true,"legendSize":"auto","maxLines":1,"position":"right","shouldTruncate":true,"showSingleSeries":true},"preferredSeriesType":"bar_stacked","showCurrentTimeMarker":false,"tickLabelsVisibilitySettings":{"x":true,"yLeft":true,"yRight":true},"valueLabels":"hide","valuesInLegend":false,"yLeftExtent":{"enforce":true,"mode":"full"},"yLeftScale":"linear","yRightScale":"linear","yTitle":"Count"}},"title":"(Kea) DHCP - Operation/Time (converted)","visualizationType":"lnsXY"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:33:42.307Z","id":"a5b0518e-4033-4d2d-84fc-a93f5fbad13f","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"indexpattern-datasource-layer-bab892f9-fc84-4c5a-b819-92f8825732c9","type":"index-pattern"}],"type":"lens","typeMigrationVersion":"8.9.0","updated_at":"2024-04-28T15:33:42.307Z","version":"WzI1MSw1XQ=="}
{"attributes":{"description":"","state":{"adHocDataViews":{},"datasourceStates":{"formBased":{"layers":{"63f2acb8-ae2e-414d-9bee-bcc99a1aacec":{"columnOrder":["f9983175-3763-49cd-bdb1-942c287b6f6e","619ee659-3c75-40c8-aad1-cace3c2e7754"],"columns":{"619ee659-3c75-40c8-aad1-cace3c2e7754":{"customLabel":true,"dataType":"number","isBucketed":false,"label":"Count","operationType":"count","params":{"emptyAsNull":true},"scale":"ratio","sourceField":"___records___"},"f9983175-3763-49cd-bdb1-942c287b6f6e":{"customLabel":true,"dataType":"ip","isBucketed":true,"label":"kea.dhcp.client.ip: Descending","operationType":"terms","params":{"exclude":[],"excludeIsRegex":false,"include":[],"includeIsRegex":false,"missingBucket":false,"orderBy":{"columnId":"619ee659-3c75-40c8-aad1-cace3c2e7754","type":"column"},"orderDirection":"desc","otherBucket":false,"parentFormat":{"id":"terms"},"size":15},"scale":"ordinal","sourceField":"kea.dhcp.client.ip"}},"ignoreGlobalFilters":false,"incompleteColumns":{}}}},"indexpattern":{"layers":{}},"textBased":{"layers":{}}},"filters":[],"internalReferences":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"categoryDisplay":"hide","emptySizeRatio":0.3,"layerId":"63f2acb8-ae2e-414d-9bee-bcc99a1aacec","layerType":"data","legendDisplay":"show","legendMaxLines":1,"legendPosition":"right","legendSize":"auto","metrics":["619ee659-3c75-40c8-aad1-cace3c2e7754"],"nestedLegend":false,"numberDisplay":"percent","percentDecimals":2,"primaryGroups":["f9983175-3763-49cd-bdb1-942c287b6f6e"],"secondaryGroups":[],"showValuesInLegend":true,"truncateLegend":true}],"palette":{"name":"kibana_palette","type":"palette"},"shape":"donut"}},"title":"(Kea) DHCP - Client IP (converted)","visualizationType":"lnsPie"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:34:07.451Z","id":"08550daf-1331-43e3-854d-e6123006238e","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"indexpattern-datasource-layer-63f2acb8-ae2e-414d-9bee-bcc99a1aacec","type":"index-pattern"}],"type":"lens","typeMigrationVersion":"8.9.0","updated_at":"2024-04-28T15:34:07.451Z","version":"WzI1Niw1XQ=="}
{"attributes":{"description":"","state":{"adHocDataViews":{},"datasourceStates":{"formBased":{"layers":{"eb8b0917-f9b7-4694-bbeb-b5aa716ea5de":{"columnOrder":["928146bb-e7ca-4019-9a34-b3af66fad434","c132a536-4282-473b-a54c-4d2478286773"],"columns":{"928146bb-e7ca-4019-9a34-b3af66fad434":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"kea.dhcp.operation: Descending","operationType":"terms","params":{"exclude":[],"excludeIsRegex":false,"include":[],"includeIsRegex":false,"missingBucket":false,"orderBy":{"columnId":"c132a536-4282-473b-a54c-4d2478286773","type":"column"},"orderDirection":"desc","otherBucket":false,"parentFormat":{"id":"terms"},"size":10},"scale":"ordinal","sourceField":"kea.dhcp.operation"},"c132a536-4282-473b-a54c-4d2478286773":{"customLabel":true,"dataType":"number","isBucketed":false,"label":"Count","operationType":"count","params":{"emptyAsNull":true},"scale":"ratio","sourceField":"___records___"}},"ignoreGlobalFilters":false,"incompleteColumns":{}}}},"indexpattern":{"layers":{}},"textBased":{"layers":{}}},"filters":[],"internalReferences":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"categoryDisplay":"hide","emptySizeRatio":0.3,"layerId":"eb8b0917-f9b7-4694-bbeb-b5aa716ea5de","layerType":"data","legendDisplay":"show","legendMaxLines":1,"legendPosition":"right","legendSize":"auto","metrics":["c132a536-4282-473b-a54c-4d2478286773"],"nestedLegend":false,"numberDisplay":"percent","percentDecimals":2,"primaryGroups":["928146bb-e7ca-4019-9a34-b3af66fad434"],"secondaryGroups":[],"showValuesInLegend":true,"truncateLegend":true}],"palette":{"name":"kibana_palette","type":"palette"},"shape":"donut"}},"title":"(Kea) DHCP - Operation (converted)","visualizationType":"lnsPie"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:33:55.924Z","id":"09abf1bd-786d-4a9d-915f-01b3af2cb95e","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"indexpattern-datasource-layer-eb8b0917-f9b7-4694-bbeb-b5aa716ea5de","type":"index-pattern"}],"type":"lens","typeMigrationVersion":"8.9.0","updated_at":"2024-04-28T15:33:55.924Z","version":"WzI1Myw1XQ=="}
{"attributes":{"description":"","state":{"adHocDataViews":{},"datasourceStates":{"formBased":{"layers":{"cc178fc8-4a78-4470-8247-48bd71a5bd6a":{"columnOrder":["0970e6a6-d317-4f64-b355-0f9dc0102ae8","da703725-da39-49e9-80da-6b88cbcc9b75","c5ba934c-3d82-454f-8521-d2c246547dda"],"columns":{"0970e6a6-d317-4f64-b355-0f9dc0102ae8":{"customLabel":true,"dataType":"date","isBucketed":true,"label":"@timestamp","operationType":"date_histogram","params":{"dropPartials":false,"includeEmptyRows":false,"interval":"auto"},"scale":"interval","sourceField":"@timestamp"},"c5ba934c-3d82-454f-8521-d2c246547dda":{"customLabel":true,"dataType":"number","isBucketed":false,"label":"Count","operationType":"count","params":{"emptyAsNull":true},"scale":"ratio","sourceField":"___records___"},"da703725-da39-49e9-80da-6b88cbcc9b75":{"customLabel":true,"dataType":"ip","isBucketed":true,"label":"kea.dhcp.client.ip: Descending","operationType":"terms","params":{"exclude":[],"excludeIsRegex":false,"include":[],"includeIsRegex":false,"missingBucket":false,"orderBy":{"columnId":"c5ba934c-3d82-454f-8521-d2c246547dda","type":"column"},"orderDirection":"desc","otherBucket":false,"parentFormat":{"id":"terms"},"size":10},"scale":"ordinal","sourceField":"kea.dhcp.client.ip"}},"ignoreGlobalFilters":false,"incompleteColumns":{}}}},"indexpattern":{"layers":{}},"textBased":{"layers":{}}},"filters":[],"internalReferences":[],"query":{"language":"kuery","query":""},"visualization":{"axisTitlesVisibilitySettings":{"x":true,"yLeft":true,"yRight":true},"curveType":"LINEAR","gridlinesVisibilitySettings":{"x":false,"yLeft":false,"yRight":true},"labelsOrientation":{"x":0,"yLeft":0,"yRight":-90},"layers":[{"accessors":["c5ba934c-3d82-454f-8521-d2c246547dda"],"isHistogram":true,"layerId":"cc178fc8-4a78-4470-8247-48bd71a5bd6a","layerType":"data","palette":{"name":"kibana_palette","type":"palette"},"seriesType":"bar_stacked","simpleView":false,"splitAccessor":"da703725-da39-49e9-80da-6b88cbcc9b75","xAccessor":"0970e6a6-d317-4f64-b355-0f9dc0102ae8","xScaleType":"time","yConfig":[{"axisMode":"left","forAccessor":"c5ba934c-3d82-454f-8521-d2c246547dda"}]}],"legend":{"isVisible":true,"legendSize":"auto","maxLines":1,"position":"right","shouldTruncate":true,"showSingleSeries":true},"preferredSeriesType":"bar_stacked","showCurrentTimeMarker":false,"tickLabelsVisibilitySettings":{"x":true,"yLeft":true,"yRight":true},"valueLabels":"hide","valuesInLegend":false,"yLeftExtent":{"enforce":true,"mode":"full"},"yLeftScale":"linear","yRightScale":"linear","yTitle":"Count"}},"title":"(Kea) DHCP - Client IP/Time (converted)","visualizationType":"lnsXY"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:34:17.985Z","id":"169e77e0-3209-43be-869c-694a4b3439cd","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"indexpattern-datasource-layer-cc178fc8-4a78-4470-8247-48bd71a5bd6a","type":"index-pattern"}],"type":"lens","typeMigrationVersion":"8.9.0","updated_at":"2024-04-28T15:34:17.985Z","version":"WzI1OCw1XQ=="}
{"attributes":{"allowHidden":false,"fieldAttrs":"{}","fieldFormatMap":"{}","fields":"[]","name":"*-pfelk-dhcp*","runtimeFieldMap":"{}","sourceFilters":"[]","timeFieldName":"@timestamp","title":"*-pfelk-dhcp*"},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:20:06.490Z","id":"e1b34046-401a-4c2a-8c44-acb8b247f94c","managed":false,"references":[],"type":"index-pattern","typeMigrationVersion":"8.0.0","updated_at":"2024-04-28T15:20:06.490Z","version":"WzE4MCw1XQ=="}
{"attributes":{"columns":["kea.dhcp.operation","kea.dhcp.client.mac","kea.dhcp.client.ip","kea.dhcp.lease.duration"],"description":"","grid":{},"hideChart":false,"isTextBasedQuery":false,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[{\"meta\":{\"alias\":null,\"negate\":true,\"disabled\":false,\"type\":\"exists\",\"key\":\"dhcpv6.client.ip\",\"value\":\"exists\",\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index\"},\"query\":{\"exists\":{\"field\":\"dhcpv6.client.ip\"}},\"$state\":{\"store\":\"appState\"}}],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[["@timestamp","desc"]],"timeRestore":false,"title":"(kea) DHCP - Discover","usesAdHocDataView":false},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:20:06.490Z","id":"ae3e6050-641f-11ec-8e46-7751ae25367b","managed":false,"references":[{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"},{"id":"e1b34046-401a-4c2a-8c44-acb8b247f94c","name":"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index","type":"index-pattern"}],"type":"search","typeMigrationVersion":"10.2.0","updated_at":"2024-04-28T15:27:40.298Z","version":"WzIyNyw1XQ=="}
{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"language\":\"kuery\",\"query\":\"\"},\"filter\":[]}"},"optionsJSON":"{\"useMargins\":true,\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"hidePanelTitles\":false}","panelsJSON":"[{\"type\":\"visualization\",\"gridData\":{\"x\":0,\"y\":0,\"w\":35,\"h\":22,\"i\":\"75252342-a22b-46e2-9db0-62e374e8ebe0\"},\"panelIndex\":\"75252342-a22b-46e2-9db0-62e374e8ebe0\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_75252342-a22b-46e2-9db0-62e374e8ebe0\"},{\"type\":\"visualization\",\"gridData\":{\"x\":35,\"y\":0,\"w\":13,\"h\":8,\"i\":\"484ba20d-5b82-4b30-a31b-b3016b4c4406\"},\"panelIndex\":\"484ba20d-5b82-4b30-a31b-b3016b4c4406\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_484ba20d-5b82-4b30-a31b-b3016b4c4406\"},{\"type\":\"visualization\",\"gridData\":{\"x\":35,\"y\":8,\"w\":13,\"h\":14,\"i\":\"e42628b9-dfea-4efa-a763-59e563e7b86f\"},\"panelIndex\":\"e42628b9-dfea-4efa-a763-59e563e7b86f\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_e42628b9-dfea-4efa-a763-59e563e7b86f\"},{\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":22,\"w\":32,\"h\":14,\"i\":\"fc939a4a-54ff-4050-b1e9-efca00c28503\"},\"panelIndex\":\"fc939a4a-54ff-4050-b1e9-efca00c28503\",\"embeddableConfig\":{\"attributes\":{\"title\":\"DHCP - Operation/Time (converted)\",\"description\":\"\",\"visualizationType\":\"lnsXY\",\"type\":\"lens\",\"references\":[{\"type\":\"index-pattern\",\"id\":\"228cd476-22c9-4685-8cab-7d2bbef90967\",\"name\":\"indexpattern-datasource-layer-bab892f9-fc84-4c5a-b819-92f8825732c9\"}],\"state\":{\"visualization\":{\"legend\":{\"isVisible\":true,\"position\":\"right\",\"legendSize\":\"auto\",\"shouldTruncate\":true,\"maxLines\":1,\"showSingleSeries\":true},\"valueLabels\":\"hide\",\"curveType\":\"LINEAR\",\"yTitle\":\"Count\",\"showCurrentTimeMarker\":false,\"valuesInLegend\":false,\"yLeftExtent\":{\"mode\":\"full\",\"enforce\":true},\"yLeftScale\":\"linear\",\"yRightScale\":\"linear\",\"axisTitlesVisibilitySettings\":{\"x\":true,\"yLeft\":true,\"yRight\":true},\"tickLabelsVisibilitySettings\":{\"x\":true,\"yLeft\":true,\"yRight\":true},\"labelsOrientation\":{\"x\":0,\"yLeft\":0,\"yRight\":-90},\"gridlinesVisibilitySettings\":{\"x\":false,\"yLeft\":false,\"yRight\":true},\"preferredSeriesType\":\"bar_stacked\",\"layers\":[{\"layerId\":\"bab892f9-fc84-4c5a-b819-92f8825732c9\",\"accessors\":[\"de069508-e2dd-46f3-abf7-213b32c4517a\"],\"layerType\":\"data\",\"seriesType\":\"bar_stacked\",\"xAccessor\":\"778bdf38-2d96-4ee6-972a-00970fd77126\",\"simpleView\":false,\"splitAccessor\":\"fd819d47-b55c-4172-908a-19b7197dacf7\",\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"},\"yConfig\":[{\"forAccessor\":\"de069508-e2dd-46f3-abf7-213b32c4517a\",\"axisMode\":\"left\"}],\"xScaleType\":\"time\",\"isHistogram\":true}]},\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filters\":[],\"datasourceStates\":{\"formBased\":{\"layers\":{\"bab892f9-fc84-4c5a-b819-92f8825732c9\":{\"ignoreGlobalFilters\":false,\"columns\":{\"778bdf38-2d96-4ee6-972a-00970fd77126\":{\"label\":\"@timestamp\",\"dataType\":\"date\",\"operationType\":\"date_histogram\",\"sourceField\":\"@timestamp\",\"isBucketed\":true,\"scale\":\"interval\",\"params\":{\"interval\":\"auto\",\"includeEmptyRows\":false,\"dropPartials\":false},\"customLabel\":true},\"fd819d47-b55c-4172-908a-19b7197dacf7\":{\"label\":\"kea.dhcp.operation: Descending\",\"dataType\":\"string\",\"operationType\":\"terms\",\"scale\":\"ordinal\",\"sourceField\":\"kea.dhcp.operation\",\"isBucketed\":true,\"params\":{\"size\":5,\"orderBy\":{\"type\":\"column\",\"columnId\":\"de069508-e2dd-46f3-abf7-213b32c4517a\"},\"orderDirection\":\"desc\",\"otherBucket\":false,\"missingBucket\":false,\"parentFormat\":{\"id\":\"terms\"},\"include\":[],\"exclude\":[],\"includeIsRegex\":false,\"excludeIsRegex\":false},\"customLabel\":true},\"de069508-e2dd-46f3-abf7-213b32c4517a\":{\"label\":\"Count\",\"dataType\":\"number\",\"operationType\":\"count\",\"isBucketed\":false,\"scale\":\"ratio\",\"sourceField\":\"___records___\",\"params\":{\"emptyAsNull\":true},\"customLabel\":true}},\"columnOrder\":[\"778bdf38-2d96-4ee6-972a-00970fd77126\",\"fd819d47-b55c-4172-908a-19b7197dacf7\",\"de069508-e2dd-46f3-abf7-213b32c4517a\"],\"incompleteColumns\":{}}}},\"indexpattern\":{\"layers\":{}},\"textBased\":{\"layers\":{}}},\"internalReferences\":[],\"adHocDataViews\":{}}},\"enhancements\":{}},\"panelRefName\":\"panel_fc939a4a-54ff-4050-b1e9-efca00c28503\"},{\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":36,\"w\":16,\"h\":14,\"i\":\"54b571b6-7339-4eb4-9c31-ae1f2a05bb6d\"},\"panelIndex\":\"54b571b6-7339-4eb4-9c31-ae1f2a05bb6d\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_54b571b6-7339-4eb4-9c31-ae1f2a05bb6d\"},{\"type\":\"lens\",\"gridData\":{\"x\":32,\"y\":22,\"w\":16,\"h\":14,\"i\":\"149ef24e-de3d-430d-acc9-8681f69fe5d2\"},\"panelIndex\":\"149ef24e-de3d-430d-acc9-8681f69fe5d2\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_149ef24e-de3d-430d-acc9-8681f69fe5d2\"},{\"type\":\"lens\",\"gridData\":{\"x\":16,\"y\":36,\"w\":32,\"h\":14,\"i\":\"cbe3ea78-788f-43c4-ac42-a830d0907762\"},\"panelIndex\":\"cbe3ea78-788f-43c4-ac42-a830d0907762\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_cbe3ea78-788f-43c4-ac42-a830d0907762\"},{\"type\":\"search\",\"gridData\":{\"x\":0,\"y\":50,\"w\":48,\"h\":15,\"i\":\"04721763-4f02-48d8-9974-be80565d377c\"},\"panelIndex\":\"04721763-4f02-48d8-9974-be80565d377c\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_04721763-4f02-48d8-9974-be80565d377c\"}]","timeRestore":false,"title":"(Kea) DHCP - Dashboard","version":1},"coreMigrationVersion":"8.8.0","created_at":"2024-04-28T15:34:35.449Z","id":"563a2d14-4886-4e07-a6a2-85af0ff5b213","managed":false,"references":[{"id":"ca2754c8-f09d-4cdc-852c-a312a5e966bb","name":"75252342-a22b-46e2-9db0-62e374e8ebe0:panel_75252342-a22b-46e2-9db0-62e374e8ebe0","type":"visualization"},{"id":"5e3b704b-8895-4eef-8cdb-393cc5488910","name":"484ba20d-5b82-4b30-a31b-b3016b4c4406:panel_484ba20d-5b82-4b30-a31b-b3016b4c4406","type":"visualization"},{"id":"74b564fb-fc4a-4d52-b9ee-985845364c06","name":"e42628b9-dfea-4efa-a763-59e563e7b86f:panel_e42628b9-dfea-4efa-a763-59e563e7b86f","type":"visualization"},{"id":"a5b0518e-4033-4d2d-84fc-a93f5fbad13f","name":"fc939a4a-54ff-4050-b1e9-efca00c28503:panel_fc939a4a-54ff-4050-b1e9-efca00c28503","type":"lens"},{"id":"228cd476-22c9-4685-8cab-7d2bbef90967","name":"fc939a4a-54ff-4050-b1e9-efca00c28503:indexpattern-datasource-layer-bab892f9-fc84-4c5a-b819-92f8825732c9","type":"index-pattern"},{"id":"08550daf-1331-43e3-854d-e6123006238e","name":"54b571b6-7339-4eb4-9c31-ae1f2a05bb6d:panel_54b571b6-7339-4eb4-9c31-ae1f2a05bb6d","type":"lens"},{"id":"09abf1bd-786d-4a9d-915f-01b3af2cb95e","name":"149ef24e-de3d-430d-acc9-8681f69fe5d2:panel_149ef24e-de3d-430d-acc9-8681f69fe5d2","type":"lens"},{"id":"169e77e0-3209-43be-869c-694a4b3439cd","name":"cbe3ea78-788f-43c4-ac42-a830d0907762:panel_cbe3ea78-788f-43c4-ac42-a830d0907762","type":"lens"},{"id":"ae3e6050-641f-11ec-8e46-7751ae25367b","name":"04721763-4f02-48d8-9974-be80565d377c:panel_04721763-4f02-48d8-9974-be80565d377c","type":"search"}],"type":"dashboard","typeMigrationVersion":"8.9.0","updated_at":"2024-04-28T15:34:35.449Z","version":"WzI2MCw1XQ=="}
{"excludedObjects":[],"excludedObjectsCount":0,"exportedCount":11,"missingRefCount":0,"missingReferences":[]}