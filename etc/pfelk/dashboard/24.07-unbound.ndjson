{"attributes":{"description":"Client IP <-flow-> dns question name","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"Unbound - DNS Flow","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Unbound - DNS Flow\",\"type\":\"vega\",\"aggs\":[],\"params\":{\"spec\":\"{\\n  $schema: https://vega.github.io/schema/vega/v3.0.json\\n  data: [\\n    {\\n      // query ES based on the currently selected time range and filter string\\n      name: rawData\\n      url: {\\n        %context%: true\\n        %timefield%: @timestamp\\n        index: *-pfelk-unbound*\\n        body: {\\n          size: 0\\n          aggs: {\\n            table: {\\n              composite: {\\n                size: 10000\\n                sources: [\\n                  {\\n                    stk1: {\\n                      terms: {field: \\\"client.ip\\\"}\\n                    }\\n                  }\\n                  {\\n                    stk2: {\\n                      terms: {field: \\\"dns.question.name\\\"}\\n                    }\\n                  }\\n                ]\\n              }\\n            }\\n          }\\n        }\\n      }\\n      // From the result, take just the data we are interested in\\n      format: {property: \\\"aggregations.table.buckets\\\"}\\n      // Convert key.stk1 -> stk1 for simpler access below\\n      transform: [\\n        {type: \\\"formula\\\", expr: \\\"datum.key.stk1\\\", as: \\\"stk1\\\"}\\n        {type: \\\"formula\\\", expr: \\\"datum.key.stk2\\\", as: \\\"stk2\\\"}\\n        {type: \\\"formula\\\", expr: \\\"datum.doc_count\\\", as: \\\"size\\\"}\\n      ]\\n    }\\n    {\\n      name: nodes\\n      source: rawData\\n      transform: [\\n        // when a country is selected, filter out unrelated data\\n        {\\n          type: filter\\n          expr: !groupSelector || groupSelector.stk1 == datum.stk1 || groupSelector.stk2 == datum.stk2\\n        }\\n        // Set new key for later lookups - identifies each node\\n        {type: \\\"formula\\\", expr: \\\"datum.stk1+datum.stk2\\\", as: \\\"key\\\"}\\n        // instead of each table row, create two new rows,\\n        // one for the source (stack=stk1) and one for destination node (stack=stk2).\\n        // The country code stored in stk1 and stk2 fields is placed into grpId field.\\n        {\\n          type: fold\\n          fields: [\\\"stk1\\\", \\\"stk2\\\"]\\n          as: [\\\"stack\\\", \\\"grpId\\\"]\\n        }\\n        // Create a sortkey, different for stk1 and stk2 stacks.\\n        // Space separator ensures proper sort order in some corner cases.\\n        {\\n          type: formula\\n          expr: datum.stack == 'stk1' ? datum.stk1+' '+datum.stk2 : datum.stk2+' '+datum.stk1\\n          as: sortField\\n        }\\n        // Calculate y0 and y1 positions for stacking nodes one on top of the other,\\n        // independently for each stack, and ensuring they are in the proper order,\\n        // alphabetical from the top (reversed on the y axis)\\n        {\\n          type: stack\\n          groupby: [\\\"stack\\\"]\\n          sort: {field: \\\"sortField\\\", order: \\\"descending\\\"}\\n          field: size\\n        }\\n        // calculate vertical center point for each node, used to draw edges\\n        {type: \\\"formula\\\", expr: \\\"(datum.y0+datum.y1)/2\\\", as: \\\"yc\\\"}\\n      ]\\n    }\\n    {\\n      name: groups\\n      source: nodes\\n      transform: [\\n        // combine all nodes into country groups, summing up the doc counts\\n        {\\n          type: aggregate\\n          groupby: [\\\"stack\\\", \\\"grpId\\\"]\\n          fields: [\\\"size\\\"]\\n          ops: [\\\"sum\\\"]\\n          as: [\\\"total\\\"]\\n        }\\n        // re-calculate the stacking y0,y1 values\\n        {\\n          type: stack\\n          groupby: [\\\"stack\\\"]\\n          sort: {field: \\\"grpId\\\", order: \\\"descending\\\"}\\n          field: total\\n        }\\n        // project y0 and y1 values to screen coordinates\\n        // doing it once here instead of doing it several times in marks\\n        {type: \\\"formula\\\", expr: \\\"scale('y', datum.y0)\\\", as: \\\"scaledY0\\\"}\\n        {type: \\\"formula\\\", expr: \\\"scale('y', datum.y1)\\\", as: \\\"scaledY1\\\"}\\n        // boolean flag if the label should be on the right of the stack\\n        {type: \\\"formula\\\", expr: \\\"datum.stack == 'stk1'\\\", as: \\\"rightLabel\\\"}\\n        // Calculate traffic percentage for this country using \\\"y\\\" scale\\n        // domain upper bound, which represents the total traffic\\n        {\\n          type: formula\\n          expr: datum.total/domain('y')[1]\\n          as: percentage\\n        }\\n      ]\\n    }\\n    {\\n      // This is a temp lookup table with all the 'stk2' stack nodes\\n      name: destinationNodes\\n      source: nodes\\n      transform: [\\n        {type: \\\"filter\\\", expr: \\\"datum.stack == 'stk2'\\\"}\\n      ]\\n    }\\n    {\\n      name: edges\\n      source: nodes\\n      transform: [\\n        // we only want nodes from the left stack\\n        {type: \\\"filter\\\", expr: \\\"datum.stack == 'stk1'\\\"}\\n        // find corresponding node from the right stack, keep it as \\\"target\\\"\\n        {\\n          type: lookup\\n          from: destinationNodes\\n          key: key\\n          fields: [\\\"key\\\"]\\n          as: [\\\"target\\\"]\\n        }\\n        // calculate SVG link path between stk1 and stk2 stacks for the node pair\\n        {\\n          type: linkpath\\n          orient: horizontal\\n          shape: diagonal\\n          sourceY: {expr: \\\"scale('y', datum.yc)\\\"}\\n          sourceX: {expr: \\\"scale('x', 'stk1') + bandwidth('x')\\\"}\\n          targetY: {expr: \\\"scale('y', datum.target.yc)\\\"}\\n          targetX: {expr: \\\"scale('x', 'stk2')\\\"}\\n        }\\n        // A little trick to calculate the thickness of the line.\\n        // The value needs to be the same as the hight of the node, but scaling\\n        // size to screen's height gives inversed value because screen's Y\\n        // coordinate goes from the top to the bottom, whereas the graph's Y=0\\n        // is at the bottom. So subtracting scaled doc count from screen height\\n        // (which is the \\\"lower\\\" bound of the \\\"y\\\" scale) gives us the right value\\n        {\\n          type: formula\\n          expr: range('y')[0]-scale('y', datum.size)\\n          as: strokeWidth\\n        }\\n        // Tooltip needs individual link's percentage of all traffic\\n        {\\n          type: formula\\n          expr: datum.size/domain('y')[1]\\n          as: percentage\\n        }\\n      ]\\n    }\\n  ]\\n  scales: [\\n    {\\n      // calculates horizontal stack positioning\\n      name: x\\n      type: band\\n      range: width\\n      domain: [\\\"stk1\\\", \\\"stk2\\\"]\\n      paddingOuter: 0.05\\n      paddingInner: 0.95\\n    }\\n    {\\n      // this scale goes up as high as the highest y1 value of all nodes\\n      name: y\\n      type: linear\\n      range: height\\n      domain: {data: \\\"nodes\\\", field: \\\"y1\\\"}\\n    }\\n    {\\n      // use rawData to ensure the colors stay the same when clicking.\\n      name: color\\n      type: ordinal\\n      range: category\\n      domain: {data: \\\"rawData\\\", fields: [\\\"stk1\\\", \\\"stk2\\\"]}\\n    }\\n    {\\n      // this scale is used to map internal ids (stk1, stk2) to stack names\\n      name: stackNames\\n      type: ordinal\\n      range: [\\\"Source\\\", \\\"Destination\\\"]\\n      domain: [\\\"stk1\\\", \\\"stk2\\\"]\\n    }\\n  ]\\n  axes: [\\n    {\\n      // x axis should use custom label formatting to print proper stack names\\n      orient: bottom\\n      scale: x\\n      encode: {\\n        labels: {\\n          update: {\\n            text: {scale: \\\"stackNames\\\", field: \\\"value\\\"}\\n          }\\n        }\\n      }\\n    }\\n    {orient: \\\"left\\\", scale: \\\"y\\\"}\\n  ]\\n  marks: [\\n    {\\n      // draw the connecting line between stacks\\n      type: path\\n      name: edgeMark\\n      from: {data: \\\"edges\\\"}\\n      // this prevents some autosizing issues with large strokeWidth for paths\\n      clip: true\\n      encode: {\\n        update: {\\n          // By default use color of the left node, except when showing traffic\\n          // from just one country, in which case use destination color.\\n          stroke: [\\n            {\\n              test: groupSelector && groupSelector.stack=='stk1'\\n              scale: color\\n              field: stk2\\n            }\\n            {scale: \\\"color\\\", field: \\\"stk1\\\"}\\n          ]\\n          strokeWidth: {field: \\\"strokeWidth\\\"}\\n          path: {field: \\\"path\\\"}\\n          // when showing all traffic, and hovering over a country,\\n          // highlight the traffic from that country.\\n          strokeOpacity: {\\n            signal: !groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 0.9 : 0.3\\n          }\\n          // Ensure that the hover-selected edges show on top\\n          zindex: {\\n            signal: !groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 1 : 0\\n          }\\n          // format tooltip string\\n          tooltip: {\\n            signal: datum.stk1 + ' â†’ ' + datum.stk2 + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\\n          }\\n        }\\n        // Simple mouseover highlighting of a single line\\n        hover: {\\n          strokeOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      // draw stack groups (countries)\\n      type: rect\\n      name: groupMark\\n      from: {data: \\\"groups\\\"}\\n      encode: {\\n        enter: {\\n          fill: {scale: \\\"color\\\", field: \\\"grpId\\\"}\\n          width: {scale: \\\"x\\\", band: 1}\\n        }\\n        update: {\\n          x: {scale: \\\"x\\\", field: \\\"stack\\\"}\\n          y: {field: \\\"scaledY0\\\"}\\n          y2: {field: \\\"scaledY1\\\"}\\n          fillOpacity: {value: 0.6}\\n          tooltip: {\\n            signal: datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\\n          }\\n        }\\n        hover: {\\n          fillOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      // draw country code labels on the inner side of the stack\\n      type: text\\n      from: {data: \\\"groups\\\"}\\n      // don't process events for the labels - otherwise line mouseover is unclean\\n      interactive: false\\n      encode: {\\n        update: {\\n          // depending on which stack it is, position x with some padding\\n          x: {\\n            signal: scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)\\n          }\\n          // middle of the group\\n          yc: {signal: \\\"(datum.scaledY0 + datum.scaledY1)/2\\\"}\\n          align: {signal: \\\"datum.rightLabel ? 'left' : 'right'\\\"}\\n          baseline: {value: \\\"middle\\\"}\\n          fontWeight: {value: \\\"bold\\\"}\\n          // only show text label if the group's height is large enough\\n          text: {signal: \\\"abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''\\\"}\\n        }\\n      }\\n    }\\n    {\\n      // Create a \\\"show all\\\" button. Shown only when a country is selected.\\n      type: group\\n      data: [\\n        // We need to make the button show only when groupSelector signal is true.\\n        // Each mark is drawn as many times as there are elements in the backing data.\\n        // Which means that if values list is empty, it will not be drawn.\\n        // Here I create a data source with one empty object, and filter that list\\n        // based on the signal value. This can only be done in a group.\\n        {\\n          name: dataForShowAll\\n          values: [{}]\\n          transform: [{type: \\\"filter\\\", expr: \\\"groupSelector\\\"}]\\n        }\\n      ]\\n      // Set button size and positioning\\n      encode: {\\n        enter: {\\n          xc: {signal: \\\"width/2\\\"}\\n          y: {value: 30}\\n          width: {value: 80}\\n          height: {value: 30}\\n        }\\n      }\\n      marks: [\\n        {\\n          // This group is shown as a button with rounded corners.\\n          type: group\\n          // mark name allows signal capturing\\n          name: groupReset\\n          // Only shows button if dataForShowAll has values.\\n          from: {data: \\\"dataForShowAll\\\"}\\n          encode: {\\n            enter: {\\n              cornerRadius: {value: 6}\\n              fill: {value: \\\"#f5f5f5\\\"}\\n              stroke: {value: \\\"#c1c1c1\\\"}\\n              strokeWidth: {value: 2}\\n              // use parent group's size\\n              height: {\\n                field: {group: \\\"height\\\"}\\n              }\\n              width: {\\n                field: {group: \\\"width\\\"}\\n              }\\n            }\\n            update: {\\n              // groups are transparent by default\\n              opacity: {value: 1}\\n            }\\n            hover: {\\n              opacity: {value: 0.7}\\n            }\\n          }\\n          marks: [\\n            {\\n              type: text\\n              // if true, it will prevent clicking on the button when over text.\\n              interactive: false\\n              encode: {\\n                enter: {\\n                  // center text in the paren group\\n                  xc: {\\n                    field: {group: \\\"width\\\"}\\n                    mult: 0.5\\n                  }\\n                  yc: {\\n                    field: {group: \\\"height\\\"}\\n                    mult: 0.5\\n                    offset: 2\\n                  }\\n                  align: {value: \\\"center\\\"}\\n                  baseline: {value: \\\"middle\\\"}\\n                  fontWeight: {value: \\\"bold\\\"}\\n                  text: {value: \\\"Show All\\\"}\\n                }\\n              }\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n  signals: [\\n    {\\n      // used to highlight traffic to/from the same country\\n      name: groupHover\\n      value: {}\\n      on: [\\n        {\\n          events: @groupMark:mouseover\\n          update: \\\"{stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\\\"\\n        }\\n        {events: \\\"mouseout\\\", update: \\\"{}\\\"}\\n      ]\\n    }\\n    // used to filter only the data related to the selected country\\n    {\\n      name: groupSelector\\n      value: false\\n      on: [\\n        {\\n          // Clicking groupMark sets this signal to the filter values\\n          events: @groupMark:click!\\n          update: \\\"{stack:datum.stack, stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\\\"\\n        }\\n        {\\n          // Clicking \\\"show all\\\" button, or double-clicking anywhere resets it\\n          events: [\\n            {type: \\\"click\\\", markname: \\\"groupReset\\\"}\\n            {type: \\\"dblclick\\\"}\\n          ]\\n          update: \\\"false\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\"}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"e895c9b0-3a99-11eb-96b2-e765737b7534","managed":false,"references":[],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzMiwyXQ=="}
{"attributes":{"fieldAttrs":"{\"dns.question.registered_domain\":{\"count\":6},\"host.name\":{\"count\":6},\"dns.answers.type\":{\"count\":1},\"dns.question.type\":{\"count\":4},\"client.ip\":{\"count\":3},\"dns.question.class\":{\"count\":3}}","fields":"[]","runtimeFieldMap":"{}","timeFieldName":"@timestamp","title":"*-pfelk-unbound*","typeMeta":"{}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"id-unbound","managed":false,"references":[],"type":"index-pattern","typeMigrationVersion":"8.0.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzE1MCwzXQ=="}
{"attributes":{"description":"","state":{"datasourceStates":{"formBased":{"layers":{"59fd6f73-f07e-4226-adf9-26dd664357c6":{"columnOrder":["e14095f8-94cb-44cd-868d-dcbe5650fe88","339e1fb5-67a4-497a-965a-2f2c72d30ae7","c6e7845e-29a8-4681-ac29-939026d7b40c"],"columns":{"339e1fb5-67a4-497a-965a-2f2c72d30ae7":{"dataType":"string","isBucketed":true,"label":"Top values of dns.question.registered_domain","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"c6e7845e-29a8-4681-ac29-939026d7b40c","type":"column"},"orderDirection":"desc","otherBucket":true,"parentFormat":{"id":"terms"},"size":3},"scale":"ordinal","sourceField":"dns.question.registered_domain"},"c6e7845e-29a8-4681-ac29-939026d7b40c":{"dataType":"number","isBucketed":false,"label":"Count of records","operationType":"count","scale":"ratio","sourceField":"___records___"},"e14095f8-94cb-44cd-868d-dcbe5650fe88":{"dataType":"ip","isBucketed":true,"label":"Top values of client.ip","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"c6e7845e-29a8-4681-ac29-939026d7b40c","type":"column"},"orderDirection":"desc","otherBucket":true,"parentFormat":{"id":"terms"},"size":5},"scale":"ordinal","sourceField":"client.ip"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"gridConfig":{"isCellLabelVisible":false,"isXAxisLabelVisible":true,"isYAxisLabelVisible":true,"type":"lens_heatmap_grid"},"layerId":"59fd6f73-f07e-4226-adf9-26dd664357c6","layerType":"data","legend":{"isVisible":true,"legendSize":"auto","position":"right","type":"lens_heatmap_legendConfig"},"shape":"heatmap","valueAccessor":"c6e7845e-29a8-4681-ac29-939026d7b40c","xAccessor":"e14095f8-94cb-44cd-868d-dcbe5650fe88","yAccessor":"339e1fb5-67a4-497a-965a-2f2c72d30ae7"}},"title":"Unbound - Queries/Client","visualizationType":"lnsHeatmap"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"17744cd0-6428-11ec-8e46-7751ae25367b","managed":false,"references":[{"id":"id-unbound","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"id-unbound","name":"indexpattern-datasource-layer-59fd6f73-f07e-4226-adf9-26dd664357c6","type":"index-pattern"}],"type":"lens","typeMigrationVersion":"8.9.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzNCwyXQ=="}
{"attributes":{"description":"Unbound client IP over time","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Unbound - Client IP/Time","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Unbound - Client IP/Time\",\"type\":\"histogram\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"date_histogram\",\"params\":{\"field\":\"@timestamp\",\"timeRange\":{\"from\":\"now-12h\",\"to\":\"now\"},\"useNormalizedEsInterval\":true,\"scaleMetricValues\":false,\"interval\":\"auto\",\"used_interval\":\"10m\",\"drop_partials\":false,\"min_doc_count\":1,\"extended_bounds\":{}},\"schema\":\"segment\"},{\"id\":\"3\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"client.ip\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":10,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"group\"}],\"params\":{\"type\":\"histogram\",\"grid\":{\"categoryLines\":false},\"categoryAxes\":[{\"id\":\"CategoryAxis-1\",\"type\":\"category\",\"position\":\"bottom\",\"show\":true,\"style\":{},\"scale\":{\"type\":\"linear\"},\"labels\":{\"show\":true,\"filter\":true,\"truncate\":100},\"title\":{}}],\"valueAxes\":[{\"id\":\"ValueAxis-1\",\"name\":\"LeftAxis-1\",\"type\":\"value\",\"position\":\"left\",\"show\":true,\"style\":{},\"scale\":{\"type\":\"linear\",\"mode\":\"normal\"},\"labels\":{\"show\":true,\"rotate\":0,\"filter\":false,\"truncate\":100},\"title\":{\"text\":\"Count\"}}],\"seriesParams\":[{\"show\":true,\"type\":\"histogram\",\"mode\":\"stacked\",\"data\":{\"label\":\"Count\",\"id\":\"1\"},\"valueAxis\":\"ValueAxis-1\",\"drawLinesBetweenPoints\":true,\"lineWidth\":2,\"showCircles\":true,\"circlesRadius\":1}],\"addTooltip\":true,\"addLegend\":true,\"legendPosition\":\"right\",\"times\":[],\"addTimeMarker\":false,\"labels\":{\"show\":false},\"thresholdLine\":{\"show\":false,\"value\":10,\"width\":1,\"style\":\"full\",\"color\":\"#E7664C\"},\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"},\"isVislibVis\":true,\"detailedTooltip\":true,\"radiusRatio\":0,\"truncateLegend\":true,\"maxLegendLines\":1,\"legendSize\":\"auto\"}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"5b553450-3a99-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"id-unbound","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzNywyXQ=="}
{"attributes":{"columns":["dns.question.class","client.ip","dns.question.registered_domain","dns.question.type"],"description":"","grid":{},"hideChart":false,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[["@timestamp","desc"]],"title":"Unbound - Discover"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"1d671a30-6420-11ec-8e46-7751ae25367b","managed":false,"references":[{"id":"id-unbound","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"search","typeMigrationVersion":"10.3.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzOCwyXQ=="}
{"attributes":{"description":"Unbound request heat map by IP address","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Unbound - Request Rate","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Unbound - Request Rate\",\"type\":\"heatmap\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"date_histogram\",\"params\":{\"field\":\"@timestamp\",\"timeRange\":{\"from\":\"now-12h\",\"to\":\"now\"},\"useNormalizedEsInterval\":true,\"scaleMetricValues\":false,\"interval\":\"auto\",\"used_interval\":\"10m\",\"drop_partials\":false,\"min_doc_count\":1,\"extended_bounds\":{}},\"schema\":\"segment\"},{\"id\":\"3\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"client.ip\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":10,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"group\"}],\"params\":{\"type\":\"heatmap\",\"addTooltip\":true,\"addLegend\":true,\"enableHover\":false,\"legendPosition\":\"top\",\"times\":[],\"colorsNumber\":10,\"colorSchema\":\"Green to Red\",\"setColorRange\":false,\"colorsRange\":[],\"invertColors\":false,\"percentageMode\":false,\"valueAxes\":[{\"show\":false,\"id\":\"ValueAxis-1\",\"type\":\"value\",\"scale\":{\"type\":\"linear\",\"defaultYExtents\":false},\"labels\":{\"show\":false,\"rotate\":0,\"overwriteColor\":false,\"color\":\"black\"}}],\"legendSize\":\"auto\"}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"f554afa0-3a98-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"id-unbound","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzOSwyXQ=="}
{"attributes":{"controlGroupInput":{"chainingSystem":"HIERARCHICAL","controlStyle":"oneLine","ignoreParentSettingsJSON":"{\"ignoreFilters\":false,\"ignoreQuery\":false,\"ignoreTimerange\":false,\"ignoreValidations\":false}","panelsJSON":"{\"b7bc262e-6ecd-4898-83d3-c989fdb3a97d\":{\"type\":\"optionsListControl\",\"order\":0,\"grow\":true,\"width\":\"medium\",\"explicitInput\":{\"id\":\"b7bc262e-6ecd-4898-83d3-c989fdb3a97d\",\"fieldName\":\"log.syslog.hostname\",\"title\":\"Unbound - Host Selector\",\"grow\":true,\"width\":\"medium\",\"searchTechnique\":\"prefix\",\"enhancements\":{}}}}","showApplySelections":false},"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"optionsJSON":"{\"useMargins\":true,\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"hidePanelTitles\":false}","panelsJSON":"[{\"type\":\"visualization\",\"gridData\":{\"x\":0,\"y\":0,\"w\":34,\"h\":20,\"i\":\"73294aad-e475-4a63-97d1-fc214a83bb0a\"},\"panelIndex\":\"73294aad-e475-4a63-97d1-fc214a83bb0a\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_73294aad-e475-4a63-97d1-fc214a83bb0a\"},{\"type\":\"lens\",\"gridData\":{\"x\":34,\"y\":0,\"w\":14,\"h\":19,\"i\":\"f39b1b4c-b444-4d25-a8c5-a78b6285025f\"},\"panelIndex\":\"f39b1b4c-b444-4d25-a8c5-a78b6285025f\",\"embeddableConfig\":{\"attributes\":{\"title\":\"Unbound - Answer Types (converted)\",\"description\":\"Unbound dns answer types\",\"visualizationType\":\"lnsPie\",\"type\":\"lens\",\"references\":[{\"type\":\"index-pattern\",\"id\":\"id-unbound\",\"name\":\"indexpattern-datasource-layer-cc09b5e0-b390-4ee0-ae84-68a75060af3c\"}],\"state\":{\"visualization\":{\"shape\":\"donut\",\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"},\"layers\":[{\"layerId\":\"cc09b5e0-b390-4ee0-ae84-68a75060af3c\",\"layerType\":\"data\",\"primaryGroups\":[\"9e51813b-d889-4c45-8dde-877bfd6054aa\"],\"secondaryGroups\":[],\"metrics\":[\"41e3509d-5dec-4e7c-aebe-461403762415\"],\"numberDisplay\":\"percent\",\"categoryDisplay\":\"inside\",\"legendDisplay\":\"hide\",\"legendPosition\":\"top\",\"showValuesInLegend\":true,\"nestedLegend\":false,\"percentDecimals\":2,\"emptySizeRatio\":0.3,\"legendMaxLines\":1,\"truncateLegend\":true,\"allowMultipleMetrics\":false}]},\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filters\":[],\"datasourceStates\":{\"formBased\":{\"layers\":{\"cc09b5e0-b390-4ee0-ae84-68a75060af3c\":{\"ignoreGlobalFilters\":false,\"columns\":{\"9e51813b-d889-4c45-8dde-877bfd6054aa\":{\"label\":\"dns.question.type: Descending\",\"dataType\":\"string\",\"operationType\":\"terms\",\"scale\":\"ordinal\",\"sourceField\":\"dns.question.type\",\"isBucketed\":true,\"params\":{\"size\":10,\"orderBy\":{\"type\":\"column\",\"columnId\":\"41e3509d-5dec-4e7c-aebe-461403762415\"},\"orderDirection\":\"desc\",\"otherBucket\":false,\"missingBucket\":false,\"parentFormat\":{\"id\":\"terms\"},\"include\":[],\"exclude\":[],\"includeIsRegex\":false,\"excludeIsRegex\":false},\"customLabel\":true},\"41e3509d-5dec-4e7c-aebe-461403762415\":{\"label\":\"Count\",\"dataType\":\"number\",\"operationType\":\"count\",\"isBucketed\":false,\"scale\":\"ratio\",\"sourceField\":\"___records___\",\"params\":{\"emptyAsNull\":true},\"customLabel\":true}},\"columnOrder\":[\"9e51813b-d889-4c45-8dde-877bfd6054aa\",\"41e3509d-5dec-4e7c-aebe-461403762415\"],\"incompleteColumns\":{},\"indexPatternId\":\"id-unbound\"}},\"currentIndexPatternId\":\"id-unbound\"},\"indexpattern\":{\"layers\":{}},\"textBased\":{\"layers\":{}}},\"internalReferences\":[],\"adHocDataViews\":{}}},\"description\":\"Unbound dns answer types\",\"enhancements\":{}},\"title\":\"Unbound - Answer Types\"},{\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":20,\"w\":24,\"h\":24,\"i\":\"2a09df68-83f6-4818-8d1a-2985971bfddd\"},\"panelIndex\":\"2a09df68-83f6-4818-8d1a-2985971bfddd\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_2a09df68-83f6-4818-8d1a-2985971bfddd\"},{\"type\":\"lens\",\"gridData\":{\"x\":24,\"y\":20,\"w\":24,\"h\":12,\"i\":\"763610d2-c8aa-4ab9-9a63-112e2471dcfc\"},\"panelIndex\":\"763610d2-c8aa-4ab9-9a63-112e2471dcfc\",\"embeddableConfig\":{\"attributes\":{\"title\":\"Unbound - Top Queries  (converted)\",\"description\":\"Top 10 domain name question/queries\",\"visualizationType\":\"lnsTagcloud\",\"type\":\"lens\",\"references\":[{\"type\":\"index-pattern\",\"id\":\"id-unbound\",\"name\":\"indexpattern-datasource-layer-d686e7aa-2860-43de-a814-5361bad56dc6\"}],\"state\":{\"visualization\":{\"layerId\":\"d686e7aa-2860-43de-a814-5361bad56dc6\",\"tagAccessor\":\"68d82eb1-fbe8-4edb-aca0-5567e02dd874\",\"valueAccessor\":\"51c74355-6978-46c4-97b9-6f870dcbea3b\",\"maxFontSize\":72,\"minFontSize\":18,\"orientation\":\"single\",\"showLabel\":true,\"colorMapping\":{\"assignments\":[],\"specialAssignments\":[{\"rule\":{\"type\":\"other\"},\"color\":{\"type\":\"loop\"},\"touched\":false}],\"paletteId\":\"eui_amsterdam_color_blind\",\"colorMode\":{\"type\":\"categorical\"}},\"layerType\":\"data\",\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"}},\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filters\":[],\"datasourceStates\":{\"formBased\":{\"layers\":{\"d686e7aa-2860-43de-a814-5361bad56dc6\":{\"ignoreGlobalFilters\":false,\"columns\":{\"68d82eb1-fbe8-4edb-aca0-5567e02dd874\":{\"label\":\"dns.question.registered_domain: Descending\",\"dataType\":\"string\",\"operationType\":\"terms\",\"scale\":\"ordinal\",\"sourceField\":\"dns.question.registered_domain\",\"isBucketed\":true,\"params\":{\"size\":10,\"orderBy\":{\"type\":\"column\",\"columnId\":\"51c74355-6978-46c4-97b9-6f870dcbea3b\"},\"orderDirection\":\"desc\",\"otherBucket\":false,\"missingBucket\":false,\"parentFormat\":{\"id\":\"terms\"},\"include\":[],\"exclude\":[],\"includeIsRegex\":false,\"excludeIsRegex\":false},\"customLabel\":true},\"51c74355-6978-46c4-97b9-6f870dcbea3b\":{\"label\":\"Count\",\"dataType\":\"number\",\"operationType\":\"count\",\"isBucketed\":false,\"scale\":\"ratio\",\"sourceField\":\"___records___\",\"params\":{\"emptyAsNull\":true},\"customLabel\":true}},\"columnOrder\":[\"68d82eb1-fbe8-4edb-aca0-5567e02dd874\",\"51c74355-6978-46c4-97b9-6f870dcbea3b\"],\"incompleteColumns\":{}}}},\"indexpattern\":{\"layers\":{}},\"textBased\":{\"layers\":{}}},\"internalReferences\":[],\"adHocDataViews\":{}}},\"description\":\"Top 10 domain name question/queries\",\"enhancements\":{}},\"title\":\"Unbound - Top Queries\"},{\"type\":\"lens\",\"gridData\":{\"x\":24,\"y\":32,\"w\":24,\"h\":12,\"i\":\"a7662c6e-94d5-4062-85f4-0132897f3578\"},\"panelIndex\":\"a7662c6e-94d5-4062-85f4-0132897f3578\",\"embeddableConfig\":{\"attributes\":{\"title\":\"Unbound - Top Client IPs (converted)\",\"description\":\"Top 10 client IP unbound events\",\"visualizationType\":\"lnsTagcloud\",\"type\":\"lens\",\"references\":[{\"type\":\"index-pattern\",\"id\":\"id-unbound\",\"name\":\"indexpattern-datasource-layer-adb3998d-cf5e-44c1-92e0-f59b0d247ee2\"}],\"state\":{\"visualization\":{\"layerId\":\"adb3998d-cf5e-44c1-92e0-f59b0d247ee2\",\"tagAccessor\":\"7a0d34c1-f83a-4fb0-b341-b27ff8a46af6\",\"valueAccessor\":\"bb5f3e1c-3168-4458-bda2-2c7375aab43d\",\"maxFontSize\":72,\"minFontSize\":18,\"orientation\":\"single\",\"showLabel\":true,\"colorMapping\":{\"assignments\":[],\"specialAssignments\":[{\"rule\":{\"type\":\"other\"},\"color\":{\"type\":\"loop\"},\"touched\":false}],\"paletteId\":\"eui_amsterdam_color_blind\",\"colorMode\":{\"type\":\"categorical\"}},\"layerType\":\"data\",\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"}},\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filters\":[],\"datasourceStates\":{\"formBased\":{\"layers\":{\"adb3998d-cf5e-44c1-92e0-f59b0d247ee2\":{\"ignoreGlobalFilters\":false,\"columns\":{\"7a0d34c1-f83a-4fb0-b341-b27ff8a46af6\":{\"label\":\"client.ip: Descending\",\"dataType\":\"ip\",\"operationType\":\"terms\",\"scale\":\"ordinal\",\"sourceField\":\"client.ip\",\"isBucketed\":true,\"params\":{\"size\":10,\"orderBy\":{\"type\":\"column\",\"columnId\":\"bb5f3e1c-3168-4458-bda2-2c7375aab43d\"},\"orderDirection\":\"desc\",\"otherBucket\":false,\"missingBucket\":false,\"parentFormat\":{\"id\":\"terms\"},\"include\":[],\"exclude\":[],\"includeIsRegex\":false,\"excludeIsRegex\":false},\"customLabel\":true},\"bb5f3e1c-3168-4458-bda2-2c7375aab43d\":{\"label\":\"Count\",\"dataType\":\"number\",\"operationType\":\"count\",\"isBucketed\":false,\"scale\":\"ratio\",\"sourceField\":\"___records___\",\"params\":{\"emptyAsNull\":true},\"customLabel\":true}},\"columnOrder\":[\"7a0d34c1-f83a-4fb0-b341-b27ff8a46af6\",\"bb5f3e1c-3168-4458-bda2-2c7375aab43d\"],\"incompleteColumns\":{}}}},\"indexpattern\":{\"layers\":{}},\"textBased\":{\"layers\":{}}},\"internalReferences\":[],\"adHocDataViews\":{}}},\"description\":\"Top 10 client IP unbound events\",\"enhancements\":{}},\"title\":\"Unbound - Top Client IPs\"},{\"type\":\"visualization\",\"gridData\":{\"x\":1,\"y\":44,\"w\":47,\"h\":14,\"i\":\"27569da9-7531-40cf-be93-8778738b68be\"},\"panelIndex\":\"27569da9-7531-40cf-be93-8778738b68be\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_27569da9-7531-40cf-be93-8778738b68be\"},{\"type\":\"search\",\"gridData\":{\"x\":0,\"y\":58,\"w\":30,\"h\":21,\"i\":\"1454fac7-f8e1-4368-9793-90a8651e9dca\"},\"panelIndex\":\"1454fac7-f8e1-4368-9793-90a8651e9dca\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_1454fac7-f8e1-4368-9793-90a8651e9dca\"},{\"type\":\"visualization\",\"gridData\":{\"x\":30,\"y\":58,\"w\":18,\"h\":21,\"i\":\"6a32114d-577c-488b-b1e9-b7b4fc8941ae\"},\"panelIndex\":\"6a32114d-577c-488b-b1e9-b7b4fc8941ae\",\"embeddableConfig\":{\"vis\":null,\"enhancements\":{}},\"panelRefName\":\"panel_6a32114d-577c-488b-b1e9-b7b4fc8941ae\"}]","timeRestore":false,"title":"Unbound - Dashboard","version":2},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"986061c0-3a9a-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"e895c9b0-3a99-11eb-96b2-e765737b7534","name":"73294aad-e475-4a63-97d1-fc214a83bb0a:panel_73294aad-e475-4a63-97d1-fc214a83bb0a","type":"visualization"},{"id":"id-unbound","name":"f39b1b4c-b444-4d25-a8c5-a78b6285025f:indexpattern-datasource-layer-cc09b5e0-b390-4ee0-ae84-68a75060af3c","type":"index-pattern"},{"id":"17744cd0-6428-11ec-8e46-7751ae25367b","name":"2a09df68-83f6-4818-8d1a-2985971bfddd:panel_2a09df68-83f6-4818-8d1a-2985971bfddd","type":"lens"},{"id":"id-unbound","name":"763610d2-c8aa-4ab9-9a63-112e2471dcfc:indexpattern-datasource-layer-d686e7aa-2860-43de-a814-5361bad56dc6","type":"index-pattern"},{"id":"id-unbound","name":"a7662c6e-94d5-4062-85f4-0132897f3578:indexpattern-datasource-layer-adb3998d-cf5e-44c1-92e0-f59b0d247ee2","type":"index-pattern"},{"id":"5b553450-3a99-11eb-96b2-e765737b7534","name":"27569da9-7531-40cf-be93-8778738b68be:panel_27569da9-7531-40cf-be93-8778738b68be","type":"visualization"},{"id":"1d671a30-6420-11ec-8e46-7751ae25367b","name":"1454fac7-f8e1-4368-9793-90a8651e9dca:panel_1454fac7-f8e1-4368-9793-90a8651e9dca","type":"search"},{"id":"f554afa0-3a98-11eb-96b2-e765737b7534","name":"6a32114d-577c-488b-b1e9-b7b4fc8941ae:panel_6a32114d-577c-488b-b1e9-b7b4fc8941ae","type":"visualization"},{"id":"id-unbound","name":"controlGroup_b7bc262e-6ecd-4898-83d3-c989fdb3a97d:optionsListDataView","type":"index-pattern"}],"type":"dashboard","typeMigrationVersion":"10.2.0","updated_at":"2024-07-24T07:18:33.911Z","version":"Wzk5OSw2XQ=="}
{"attributes":{"description":"Select one or many observers","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"Unbound - Observer Selector","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Unbound - Observer Selector\",\"type\":\"input_control_vis\",\"aggs\":[],\"params\":{\"controls\":[{\"id\":\"1607571032579\",\"fieldName\":\"log.syslog.hostname\",\"parent\":\"\",\"label\":\"Unbound - Observer\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"dynamicOptions\":true,\"size\":5,\"order\":\"desc\"},\"indexPatternRefName\":\"control_0_index_pattern\"}],\"updateFiltersOnChange\":false,\"useTimeFilter\":false,\"pinFilters\":false}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"32e8a700-3a98-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"id-unbound","name":"control_0_index_pattern","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzMSwyXQ=="}
{"attributes":{"description":"Unbound dns answer types","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Unbound - Answer Types","uiStateJSON":"{\"vis\":{\"legendOpen\":true}}","version":1,"visState":"{\"title\":\"Unbound - Answer Types\",\"type\":\"pie\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"dns.question.type\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":10,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"segment\"}],\"params\":{\"type\":\"pie\",\"addTooltip\":true,\"legendPosition\":\"top\",\"isDonut\":true,\"labels\":{\"show\":false,\"values\":true,\"last_level\":true,\"truncate\":100},\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"},\"distinctColors\":true,\"nestedLegend\":false,\"truncateLegend\":true,\"maxLegendLines\":1,\"legendDisplay\":\"show\",\"legendSize\":\"auto\"}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"2fed9a00-3a99-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"id-unbound","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzMywyXQ=="}
{"attributes":{"description":"Top 10 domain name question/queries","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Unbound - Top Queries ","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Unbound - Top Queries \",\"type\":\"tagcloud\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"dns.question.registered_domain\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":10,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"segment\"}],\"params\":{\"scale\":\"linear\",\"orientation\":\"single\",\"minFontSize\":18,\"maxFontSize\":72,\"showLabel\":true,\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"}}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"98775710-3a98-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"id-unbound","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzNSwyXQ=="}
{"attributes":{"description":"Top 10 client IP unbound events","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Unbound - Top Client IPs","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Unbound - Top Client IPs\",\"type\":\"tagcloud\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"client.ip\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":10,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"segment\"}],\"params\":{\"scale\":\"linear\",\"orientation\":\"single\",\"minFontSize\":18,\"maxFontSize\":72,\"showLabel\":true,\"palette\":{\"type\":\"palette\",\"name\":\"kibana_palette\"}}}"},"coreMigrationVersion":"8.8.0","created_at":"2024-07-16T08:06:47.025Z","created_by":"u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0","id":"77eaf920-3a98-11eb-96b2-e765737b7534","managed":false,"references":[{"id":"id-unbound","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","typeMigrationVersion":"8.5.0","updated_at":"2024-07-16T08:06:47.025Z","version":"WzEzNiwyXQ=="}
{"excludedObjects":[],"excludedObjectsCount":0,"exportedCount":11,"missingRefCount":0,"missingReferences":[]}