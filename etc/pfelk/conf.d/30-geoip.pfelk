# 30-geoip.pfelk
################################################################################
# Version: 24.10                                                               #
# Required: False - Optional                                                   #
# Description: Enriches source.ip and destination.ip fields with GeoIP data    #
# For MaxMind, remove all instances of "#MMR#" or leave for built-in GeoIP     #
################################################################################
#
#################
### pf LOGS ###
filter {
  if "pfelk" in [tags] {
    if [source][ip] {
      ### Check if source.ip address is private
      cidr {
        address => [ "%{[source][ip]}" ]
        network => [ "0.0.0.0/32", "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.168.0.0/16", "224.0.0.0/4", "255.255.255.255/32", "fe80::/10", "fc00::/7", "ff00::/8", "::1/128", "::" ]
        add_tag => "IP_Private_Source"
      }
      if "IP_Private_Source" not in [tags] {
        geoip {
          source => "[source][ip]"
#MMR#          database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
        }
        geoip {
          source => "[source][ip]"
          default_database_type => 'ASN'
#MMR#          database => "/usr/share/GeoIP/GeoLite2-ASN.mmdb"
        }
        mutate {
          add_tag => "GeoIP_Source"
        }
      }
    }
    if [destination][ip] {
      ### Check if destination.ip address is private
      cidr {
        address => [ "%{[destination][ip]}" ]
        network => [ "0.0.0.0/32", "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.168.0.0/16", "224.0.0.0/4", "255.255.255.255/32", "fe80::/10", "fc00::/7", "ff00::/8", "::1/128", "::" ]
        add_tag => "IP_Private_Destination"
      }
      if "IP_Private_Destination" not in [tags] {
        geoip {
          source => "[destination][ip]"
#MMR#          database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
#ECSv8#          target => "[destination]"
        }
        geoip {
          source => "[destination][ip]"
          default_database_type => 'ASN'
#MMR#          database => "/usr/share/GeoIP/GeoLite2-ASN.mmdb"
        }
        mutate {
          add_tag => "GeoIP_Destination"
        }
      }
    }
  }
###########################
  ### haproxy / ngnix ###
  if "haproxy" in [tags] or "nginx" in [tags] {
    if [client][ip] {
     # Check if client.ip address is private
      cidr {
        address => [ "%{[client][ip]}" ]
        network => [ "0.0.0.0/32", "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.168.0.0/16", "224.0.0.0/4", "255.255.255.255/32", "fe80::/10", "fc00::/7", "ff00::/8", "::1/128", "::" ]
        add_tag => "IP_Private_Proxy"
      }
      if "IP_Private_Proxy" not in [tags] {
        geoip {
          source => "[client][ip]"
#MMR#          database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
        }
        geoip {
          source => "[client][ip]"
          default_database_type => 'ASN'
#MMR#          database => "/usr/share/GeoIP/GeoLite2-ASN.mmdb"
       }
        mutate {
          add_tag => "GeoIP_Source"
        }
      }
    }
  }
###################
  ### openvpn ###
  if "openvpn" in [tags] {
    if [openvpn][client][ip] {
     # Check if client.ip address is private
      cidr {
        address => [ "%{[openvpn][client][ip]}" ]
        network => [ "0.0.0.0/32", "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.168.0.0/16", "224.0.0.0/4", "255.255.255.255/32", "fe80::/10", "fc00::/7", "ff00::/8", "::1/128", "::" ]
        add_tag => "IP_Private_OpenVPN"
      }
      if "IP_Private_Proxy_OpenVPN" not in [tags] {
        geoip {
          source => "[openvpn][client][ip]"
#MMR#          database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
        }
        geoip {
          source => "[openvpn][client][ip]"
          default_database_type => 'ASN'
#MMR#          database => "/usr/share/GeoIP/GeoLite2-ASN.mmdb"
       }
        mutate {
          add_tag => "GeoIP_Client_OpenVPN"
        }
      }
    }
  }
}
